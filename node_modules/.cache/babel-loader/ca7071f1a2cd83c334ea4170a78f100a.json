{"ast":null,"code":"var _jsxFileName = \"/Users/kirkhoey/Desktop/myapp/src/App.js\";\nimport React, { Component } from 'react'; //import { Router, navigate } from '@reach/router';\n\nimport Firebase from './Firebase';\nimport './App.css';\nimport Register from './Register';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.writeUserData = (userId, name, email, imageUrl) => {\n      Firebase.database().ref('users/' + userId).set({\n        username: name,\n        email: email,\n        profile_picture: imageUrl\n      });\n    };\n\n    this.addMeeting = meetingName => {\n      const ref = Firebase.database().ref(\"meetings/\".concat(this.state.user.uid));\n      ref.push({\n        meetingName: meetingName\n      });\n    };\n\n    this.state = {\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    window.recaptchaVerifier = new Firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n      size: \"invisible\" // other options\n\n    });\n  }\n\n  onClick() {\n    const phoneNumber = this.phone;\n    const appVerifier = window.recaptchaVerifier;\n    Firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmResult => {// success\n    }).catch(error => {// error\n    });\n  }\n\n  render() {\n    const db = Firebase.database();\n    console.log(db);\n    console.log('yes'); //writeUserData(\"33\",\"kirk\",\"kirkhoey@gmail.com\",\"urlllaskdjf\");\n    //writeUserData(\"3342d\",\"kirk\",\"kirkhoey@gmail.com\",\"urlllaskdjf\");\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Register, {\n      writeUserData: this.writeUserData,\n      userName: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kirkhoey/Desktop/myapp/src/App.js"],"names":["React","Component","Firebase","Register","App","constructor","writeUserData","userId","name","email","imageUrl","database","ref","set","username","profile_picture","addMeeting","meetingName","state","user","uid","push","componentDidMount","window","recaptchaVerifier","auth","RecaptchaVerifier","size","onClick","phoneNumber","phone","appVerifier","signInWithPhoneNumber","then","confirmResult","catch","error","render","db","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE1BI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAgCdC,aAhCc,GAgCE,CAACC,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,KAAkC;AAChDR,MAAAA,QAAQ,CAACS,QAAT,GAAoBC,GAApB,CAAwB,WAAWL,MAAnC,EAA2CM,GAA3C,CAA+C;AAC7CC,QAAAA,QAAQ,EAAEN,IADmC;AAE7CC,QAAAA,KAAK,EAAEA,KAFsC;AAG7CM,QAAAA,eAAe,EAAGL;AAH2B,OAA/C;AAKD,KAtCa;;AAAA,SAwCdM,UAxCc,GAwCDC,WAAW,IAAI;AAC1B,YAAML,GAAG,GAAGV,QAAQ,CACjBS,QADS,GAETC,GAFS,oBAEO,KAAKM,KAAL,CAAWC,IAAX,CAAgBC,GAFvB,EAAZ;AAGAR,MAAAA,GAAG,CAACS,IAAJ,CAAS;AAAEJ,QAAAA,WAAW,EAAEA;AAAf,OAAT;AACD,KA7Ca;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAIDG,EAAAA,iBAAiB,GAAI;AACnBC,IAAAA,MAAM,CAACC,iBAAP,GAA2B,IAAItB,QAAQ,CAACuB,IAAT,CAAcC,iBAAlB,CAAoC,qBAApC,EAC3B;AACGC,MAAAA,IAAI,EAAC,WADR,CAEI;;AAFJ,KAD2B,CAA3B;AAKH;;AAEDC,EAAAA,OAAO,GAAG;AACN,UAAMC,WAAW,GAAG,KAAKC,KAAzB;AACA,UAAMC,WAAW,GAAGR,MAAM,CAACC,iBAA3B;AACAtB,IAAAA,QAAQ,CACPuB,IADD,GAECO,qBAFD,CAEuBH,WAFvB,EAEoCE,WAFpC,EAGCE,IAHD,CAGMC,aAAa,IAAI,CACrB;AACD,KALD,EAMCC,KAND,CAMOC,KAAK,IAAI,CACd;AACD,KARD;AASH;;AAsBCC,EAAAA,MAAM,GAAE;AACN,UAAMC,EAAE,GAAGpC,QAAQ,CAACS,QAAT,EAAX;AACA4B,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAHM,CAIN;AACA;;AAGF,WAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,aAAa,EAAE,KAAKlC,aAA9B;AAA6C,MAAA,QAAQ,EAAE,KAAKY,KAAL,CAAWC,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHE;AAQD;;AArE2B;;AAwE5B,eAAef,GAAf","sourcesContent":["import React, {Component} from 'react';\n//import { Router, navigate } from '@reach/router';\nimport Firebase from './Firebase';\nimport './App.css';\n\nimport Register from './Register';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      user: null\n    };\n  }\n\n  \n\n  componentDidMount () {\n    window.recaptchaVerifier = new Firebase.auth.RecaptchaVerifier(\"recaptcha-container\",\n    {\n       size:\"invisible\"\n        // other options\n    });\n}\n\nonClick() {\n    const phoneNumber = this.phone;\n    const appVerifier = window.recaptchaVerifier;\n    Firebase\n    .auth()\n    .signInWithPhoneNumber(phoneNumber, appVerifier)\n    .then(confirmResult => {\n      // success\n    })\n    .catch(error => {\n      // error\n    });\n}\n\n\n  writeUserData = (userId, name, email, imageUrl) =>{\n    Firebase.database().ref('users/' + userId).set({\n      username: name,\n      email: email,\n      profile_picture : imageUrl\n    });\n  };\n\n  addMeeting = meetingName => {\n    const ref = Firebase\n      .database()\n      .ref(`meetings/${this.state.user.uid}`);\n    ref.push({ meetingName: meetingName });\n  };\n\n\n\n\n\n  render(){\n    const db = Firebase.database();\n    console.log(db);\n    console.log('yes');    \n    //writeUserData(\"33\",\"kirk\",\"kirkhoey@gmail.com\",\"urlllaskdjf\");\n    //writeUserData(\"3342d\",\"kirk\",\"kirkhoey@gmail.com\",\"urlllaskdjf\");\n\n\n  return (\n\n\n<div>\n    <Register writeUserData={this.writeUserData} userName={this.state.user}/>\n \n</div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}