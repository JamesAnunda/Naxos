{"ast":null,"code":"var _jsxFileName = \"/Users/kirkhoey/Desktop/Naxos/src/Music.js\";\nimport React, { Component } from 'react';\n\nclass Music extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      play: false\n    };\n    this.audio = new Audio(this.props.url);\n\n    this.togglePlay = () => {\n      this.setState({\n        play: !this.state.play\n      }, () => {\n        this.state.play ? this.audio.play() : this.audio.pause();\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.togglePlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.play ? 'Pause' : 'Play'));\n  }\n\n}\n\nexport default Music;","map":{"version":3,"sources":["/Users/kirkhoey/Desktop/Naxos/src/Music.js"],"names":["React","Component","Music","state","play","audio","Audio","props","url","togglePlay","setState","pause","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,KAAN,SAAoBF,KAAK,CAACC,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCE,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAE;AADA,KADwB;AAAA,SAIhCC,KAJgC,GAIxB,IAAIC,KAAJ,CAAU,KAAKC,KAAL,CAAWC,GAArB,CAJwB;;AAAA,SAMhCC,UANgC,GAMnB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApB,OAAd,EAA0C,MAAM;AAC9C,aAAKD,KAAL,CAAWC,IAAX,GAAkB,KAAKC,KAAL,CAAWD,IAAX,EAAlB,GAAsC,KAAKC,KAAL,CAAWM,KAAX,EAAtC;AACD,OAFD;AAGD,KAV+B;AAAA;;AAYhCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKH,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKN,KAAL,CAAWC,IAAX,GAAkB,OAAlB,GAA4B,MAA/D,CADF,CADF;AAKD;;AAlB+B;;AAqBlC,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Music extends React.Component {\n    state = {\n      play: false\n    }\n    audio = new Audio(this.props.url)\n  \n    togglePlay = () => {\n      this.setState({ play: !this.state.play }, () => {\n        this.state.play ? this.audio.play() : this.audio.pause();\n      });\n    }\n  \n    render() {\n      return (\n        <div>\n          <button onClick={this.togglePlay}>{this.state.play ? 'Pause' : 'Play'}</button>\n        </div>\n      );\n    }\n  }\n  \n  export default Music;"]},"metadata":{},"sourceType":"module"}