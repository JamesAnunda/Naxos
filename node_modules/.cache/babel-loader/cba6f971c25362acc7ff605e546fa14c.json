{"ast":null,"code":"var _jsxFileName = \"/Users/kirkhoey/Desktop/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport { Router, navigate } from '@reach/router';\nimport Firebase, { auth } from './Firebase';\nimport './App.css';\nimport { usePosition } from 'use-position';\nimport Login from './Login';\nimport Home from './Home';\nimport Demo from './Demo';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeartbeat, faSpinner } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faHeartbeat, faSpinner);\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.writeUserData = (userId, name, email, imageUrl) => {\n      Firebase.database().ref('users/' + userId).set({\n        username: name,\n        email: email,\n        profile_picture: imageUrl\n      });\n    };\n\n    this.addMeeting = meetingName => {\n      const ref = Firebase.database().ref(\"meetings/\".concat(this.state.user.uid));\n      ref.push({\n        meetingName: meetingName\n      });\n    };\n\n    this.state = {\n      user: null,\n      phone: \"+15555555555\"\n    };\n    this.authPhone = this.authPhone.bind(this);\n\n    const Demo = () => {\n      const _usePosition = usePosition(true),\n            latitude = _usePosition.latitude,\n            longitude = _usePosition.longitude,\n            timestamp = _usePosition.timestamp,\n            accuracy = _usePosition.accuracy,\n            error = _usePosition.error;\n\n      return React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"latitude: \", latitude, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), \"longitude: \", longitude, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), \"timestamp: \", timestamp, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), \"accuracy: \", accuracy && \"\".concat(accuracy, \"m\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), \"error: \", error);\n    };\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user\n        });\n        console.log('logged in');\n        console.log(user.uid);\n        navigate('/home');\n      } else {\n        console.log('logged out');\n        navigate('/');\n      }\n    });\n    auth.setPersistence(Firebase.auth.Auth.Persistence.NONE).then(function () {// Existing and future Auth states are now persisted in the current\n      // session only. Closing the window would clear any existing state even\n      // if a user forgets to sign out.\n      // ...\n      // New sign-in will be persisted with session persistence.\n      //return Firebase.auth().signInWithEmailAndPassword(email, password);\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  }\n\n  getLocation() {}\n\n  authPhone() {\n    const phoneNumber = this.state.phone;\n    const appVerifier = window.recaptchaVerifier;\n    Firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmResult => {\n      console.log(\"success\");\n      console.log(confirmResult); // success\n      //var code = getCodeFromUserInput();\n\n      var code = \"123463\";\n      confirmResult.confirm(code).then(function (result) {\n        // User signed in successfully.\n        var user = result.user;\n        console.log(user); // ...\n      }).catch(function (error) {\n        // User couldn't sign in (bad verification code?)\n        // ...\n        console.log(error);\n      });\n    }).catch(error => {\n      // error\n      console.log('nope error');\n      console.log(error);\n    });\n  }\n\n  authAnon() {\n    Firebase.auth().signInAnonymously().catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // ...\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Login, {\n      path: \"/\",\n      authAnon: this.authAnon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Home, {\n      path: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.getLocation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Get Location\"), React.createElement(Demo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kirkhoey/Desktop/myapp/src/App.js"],"names":["React","Component","Router","navigate","Firebase","auth","usePosition","Login","Home","Demo","library","FontAwesomeIcon","faHeartbeat","faSpinner","add","App","constructor","writeUserData","userId","name","email","imageUrl","database","ref","set","username","profile_picture","addMeeting","meetingName","state","user","uid","push","phone","authPhone","bind","latitude","longitude","timestamp","accuracy","error","componentDidMount","onAuthStateChanged","setState","console","log","setPersistence","Auth","Persistence","NONE","then","catch","errorCode","code","errorMessage","message","getLocation","phoneNumber","appVerifier","window","recaptchaVerifier","signInWithPhoneNumber","confirmResult","confirm","result","authAnon","signInAnonymously","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Router, navigate } from '@reach/router';\nimport Firebase, {auth} from './Firebase';\nimport './App.css';\nimport { usePosition } from 'use-position';\n\nimport Login from './Login';\nimport Home from './Home';\n\n\nimport Demo from './Demo';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeartbeat, faSpinner} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faHeartbeat, faSpinner);\n\n\n\n\n\n\nclass App extends Component {\n\n\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      phone: \"+15555555555\"\n    };\n\n\n    this.authPhone = this.authPhone.bind(this);\n  \n    \n    const Demo = () => {\n      const { latitude, longitude, timestamp, accuracy, error } = usePosition(true);\n    \n      return (\n    \n        <code>\n          latitude: {latitude}<br/>\n          longitude: {longitude}<br/>\n          timestamp: {timestamp}<br/>\n          accuracy: {accuracy && `${accuracy}m`}<br/>\n          error: {error}\n        </code>\n      );\n    };\n\n  }\n\n  \n\ncomponentDidMount () {\n\n\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n         this.setState({user})\n         console.log('logged in');\n         console.log(user.uid);\n         navigate('/home');\n      } else{\n        console.log('logged out');\n        navigate('/');\n      }\n  });\n  \n\n  auth.setPersistence(Firebase.auth.Auth.Persistence.NONE)\n  .then(function() {\n    // Existing and future Auth states are now persisted in the current\n    // session only. Closing the window would clear any existing state even\n    // if a user forgets to sign out.\n    // ...\n    // New sign-in will be persisted with session persistence.\n    //return Firebase.auth().signInWithEmailAndPassword(email, password);\n  })\n  .catch(function(error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n  });\n  \n}\n\ngetLocation() {\n\n}\n\n\nauthPhone() {\n    const phoneNumber = this.state.phone;\n    const appVerifier = window.recaptchaVerifier;\n    Firebase\n    .auth()\n    .signInWithPhoneNumber(phoneNumber, appVerifier)\n    .then(confirmResult => {\n      console.log(\"success\");\n      console.log(confirmResult);\n      // success\n\n        //var code = getCodeFromUserInput();\n        var code = \"123463\";\n        confirmResult.confirm(code).then(function (result) {\n          // User signed in successfully.\n          var user = result.user;\n          console.log(user);\n          // ...\n        }).catch(function (error) {\n          // User couldn't sign in (bad verification code?)\n          // ...\n          console.log(error);\n        });\n    })\n    .catch(error => {\n      // error\n      console.log('nope error');\n      console.log(error);\n    });\n}\n\nauthAnon() { \nFirebase.auth().signInAnonymously().catch(function(error) {\n  // Handle Errors here.\n  var errorCode = error.code;\n  var errorMessage = error.message;\n  // ...\n});\n}\n\n\n\n  writeUserData = (userId, name, email, imageUrl) =>{\n    Firebase.database().ref('users/' + userId).set({\n      username: name,\n      email: email,\n      profile_picture : imageUrl\n    });\n  };\n\n  addMeeting = meetingName => {\n    const ref = Firebase\n      .database()\n      .ref(`meetings/${this.state.user.uid}`);\n    ref.push({ meetingName: meetingName });\n  };\n\n\n  \n  \n\n\n  render(){\n\n\n  return (\n\n\n<div>\n<Router>\n  <Login path='/' authAnon={this.authAnon} />\n  <Home path='/home' />\n</Router>\n\n<button onClick={this.getLocation()}>Get Location</button>\n\n<Demo />\n\n</div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}